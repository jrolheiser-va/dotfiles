// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "cmd+1",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "alt+up",
        "command": "editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+b",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+b",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "shift+cmd+d",
        "command": "editor.action.moveSelectionToPreviousFindMatch"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "cmd+9",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "shift+cmd+9",
        "command": "workbench.action.closePanel"
    },
    {
        "key": "alt+up",
        "command": "-find.history.showPrevious",
        "when": "editorFocus && findInputFocussed && findWidgetVisible"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.findWidget.history.showPrevious",
        "when": "terminalFindWidgetInputFocused && terminalFindWidgetVisible"
    },
    {
        "key": "alt+up",
        "command": "-search.history.showPreviousExcludePattern",
        "when": "patternExcludesInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+up",
        "command": "-search.history.showPreviousIncludePattern",
        "when": "patternIncludesInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+up",
        "command": "-search.history.showPrevious",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.extensioneditor.showPreviousFindTerm",
        "when": "extensionEditorFindWidgetInputFocused"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.webvieweditor.showPreviousFindTerm",
        "when": "webviewEditorFindWidgetInputFocused"
    },
    {
        "key": "alt+up",
        "command": "-showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+cmd+up",
        "command": "block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+up",
        "command": "-block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-find.history.showNext",
        "when": "editorFocus && findInputFocussed && findWidgetVisible"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.findWidget.history.showNext",
        "when": "terminalFindWidgetInputFocused && terminalFindWidgetVisible"
    },
    {
        "key": "alt+down",
        "command": "-search.history.showNextExcludePattern",
        "when": "patternExcludesInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+down",
        "command": "-search.history.showNextIncludePattern",
        "when": "patternIncludesInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+down",
        "command": "-search.history.showNext",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.extensioneditor.showNextFindTerm",
        "when": "extensionEditorFindWidgetInputFocused"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.webvieweditor.showNextFindTerm",
        "when": "webviewEditorFindWidgetInputFocused"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+cmd+down",
        "command": "block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+up",
        "command": "-cursorTopSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+down",
        "command": "-cursorBottomSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-scrollLineUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+e",
        "command": "-actions.find"
    },
    {
        "key": "cmd+e",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "shift+cmd+a",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "cmd+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "cmd+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus"
    },
    {
        "key": "cmd+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "extensionEditorWebviewFocus"
    },
    {
        "key": "cmd+f",
        "command": "-editor.action.extensioneditor.hidefind",
        "when": "extensionEditorWebviewFocus"
    },
    {
        "key": "cmd+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+cmd+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+cmd+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+l",
        "command": "git.checkout"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+w",
        "command": "gitlens.toggleFileBlame",
        "when": "editorTextFocus && gitlens:activeIsBlameable && gitlens:keymap == 'alternate'"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && gitlens:activeIsBlameable && gitlens:keymap == 'alternate'"
    },
    {
        "key": "alt+cmd+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && gitlens:activeIsBlameable && gitlens:keymap == 'chorded'"
    },
    {
        "key": "ctrl+cmd+q",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    }
]
